<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.11.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- JPA 관련 설정 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
			    <value>classpath:/datasource.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="jpaDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<!-- driverClassName 프로퍼티 값을 세팅하면 persistence.xml에서 
		     hibernate.dialect(사용하는 DB 종류를 지정하는 속성) 프로퍼티가 자동으로 설정되게 함 -->
		<property name="url" value="${MYSQL_URL}" />
		<property name="username" value="${MYSQL_USER}" />
		<property name="password" value="${MYSQL_PASSWORD}" />
	</bean>
	
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="jpaDataSource"></property>
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"></property>
		<property name="jpaProperties">
            <props>
            	<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> 기존 테이블을 삭제하고 새로운 테이블 생성(서버 운영 중에는 사용하면 안됨) -->
                <prop key="hibernate.hbm2ddl.auto">update</prop> <!-- 기존 테이블은 유지하고 없는 테이블만 생성함 -->
                <!-- 테이블 자동 생성 설정값
                	none: DDL 생성 기능을 사용하지 않음
					create: 애플리케이션 시작 시 테이블을 생성하고, 기존 데이터는 삭제됨
					create-drop: 애플리케이션 시작 시 테이블을 생성하고, 종료 시 스키마를 삭제함
					update: 테이블을 업데이트함. 이 경우 기존 테이블을 유지하고 없는 테이블만 생성하며 변경된 내용을 업데이트함
					validate: 테이블을 엔티티와 일치하는지 검증만 수행하고, 변경 사항이 있을 경우 예외를 발생시킴. 
				          	  테이블은 생성하지 않음
                -->
            </props>
        </property>
	</bean>
	
	<!-- Mapper 기능을 하는 repository 패키지 지정 -->
	<jpa:repositories base-package="com.human.V5.repository" />
	
	<!-- 트랜잭션 관련 설정 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
</beans>
